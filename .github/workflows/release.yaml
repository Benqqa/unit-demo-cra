name: Release Workflow
run-name: ${{ github.actor }} started Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write
  issues: write

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm test

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build
      - run: npx playwright install
      - run: npm run e2e-ci

  release:
    needs: [unit, e2e]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo ${{ github.ref }}

      - name: changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4.0.0-rc03
        with:
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "labels": ["feature"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix"]
                },
                {
                  "key": "tests",
                  "title": "## üß™ Tests",
                  "labels": ["test"]
                },
                {
                  "title": "## üß™ Tests and some ü™Ñ Magic",
                  "labels": ["test", "magic"],
                  "exclude_labels": ["no-magic"],
                  "exhaustive": true,
                  "exhaustive_rules": "false",
                  "empty_content": "- no matching PRs",
                  "rules": [
                    {
                      "pattern": "open",
                      "on_property": "status",
                      "flags": "gu"
                    }
                  ]
                }
              ],
              "ignore_labels": [
                "ignore"
              ],
              "sort": {
                "order": "ASC",
                "on_property": "mergedAt"
              },
              "template": "${{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n${{UNCATEGORIZED}}\n</details>",
              "pr_template": "- ${{TITLE}}\n   - PR: #${{NUMBER}}",
              "empty_template": "- no changes",
              "label_extractor": [
                {
                  "pattern": "(.) (.+)",
                  "target": "$1",
                  "flags": "gu"
                },
                {
                  "pattern": "\\[Issue\\]",
                  "on_property": "title",
                  "method": "match"
                }
              ],
              "duplicate_filter": {
                "pattern": "\\[ABC-....\\]",
                "on_property": "title",
                "method": "match"
              },
              "reference": {
                "pattern": ".*\\ \\#(.).*",
                "on_property": "body",
                "method": "replace",
                "target": "$1"
              },
              "transformers": [
                {
                  "pattern": "[\\-\\*] (\\[(...|TEST|CI|SKIP)\\])( )?(.+?)\n(.+?[\\-\\*] )(.+)",
                  "target": "- $4\n  - $6"
                }
              ],
              "trim_values": false,
              "max_tags_to_fetch": 200,
              "max_pull_requests": 200,
              "max_back_track_time_days": 365,
              "exclude_merge_branches": [
                "Owner/qa"
              ],
              "tag_resolver": {
                "method": "semver",
                "filter": {
                  "pattern": "api-(.+)",
                  "flags": "gu"
                }
              },
              "base_branches": [
                "dev"
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: RELEASE ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: issue
        id: issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue create --title "RELEASE ${{ github.ref_name }}" --body "–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞ - ${{ github.event.head_commit.timestamp }}, –ê–≤—Ç–æh - ${{ github.actor }}, –í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞ - ${{ github.ref_name }},  *changelog* —Å—Ç–∞—Ç—É—Å—Å –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–∫–∏ - ${{ steps.changelog.outputs.failed }}, ${{ steps.changelog.outputs.fromTag }}, –¥–æ —Ç–µ–≥–∞  ${{ steps.changelog.outputs.toTag }} - ${{ steps.changelog.outputs.changelog }}"


  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
